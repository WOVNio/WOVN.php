<?xml version="1.0"?>
<ruleset name="WOVNio">
  <arg value="s" /> <!-- show sniff codes in all reports -->
  <arg value="p" /> <!-- show progress of the run -->
  <arg name="colors" />

  <file>./</file>
  <exclude-pattern>./vendor</exclude-pattern>
  <!-- FIXME: original indentation is 4, but it was changed to 2 -->
  <exclude-pattern>./src/wovnio/modified_vendor</exclude-pattern>
  <!-- TODO: fix excluded files below -->
  <exclude-pattern>./src/wovn_helper.php</exclude-pattern>
  <exclude-pattern>./test/unit/html/HtmlReplaceMakerTest.php</exclude-pattern>
  <exclude-pattern>./test/unit/modified_vendor/SimpleHtmlDomTest.php</exclude-pattern>
  <exclude-pattern>./test/unit/UrlTest.php</exclude-pattern>
  <exclude-pattern>./test/unit/utils/request_handlers/CurlRequestHandlerTest.php</exclude-pattern>
  <exclude-pattern>./test/unit/utils/request_handlers/FileGetContentsRequestHandlerTest.php</exclude-pattern>

  <rule ref="Internal.Tokenizer.Exception">
    <type>error</type>
  </rule>

  <!-- https://www.php-fig.org/psr/psr-2/ -->
  <rule ref="PSR2">
    <!-- PHP 5.3 doesn't allow calling private method inside anonymous
         functions, so we use '_' for implicit visibility in some classes -->
    <exclude name="Squiz.Scope.MethodScope.Missing" />
    <exclude name="PSR2.Methods.MethodDeclaration.Underscore" />
    <!-- TODO: Fix and remove once other rules are fixed -->
    <exclude name="PSR2.Methods.FunctionCallSignature.Indent" />
    <exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact" />
    <exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect" />
    <!-- TODO: Fix indentation before, because this error detection seems too
               dependent to the indentation size -->
    <exclude name="PSR2.ControlStructures.SwitchDeclaration.BreakIndent" />
    <!-- TODO: Fix indentation before fixing lines too long warnings -->
    <exclude name="Generic.Files.LineLength.TooLong" />
    <!-- TODO: Fix at last (probably fixed after autoloading setup) -->
    <exclude name="PSR1.Files.SideEffects.FoundWithSymbols" />
  </rule>

  <!-- use camelCase everywhere (PSR2 forces it for class members only) -->
  <rule ref="Squiz.NamingConventions.ValidFunctionName.NotCamelCaps" />
  <!-- FIXME: Squiz.NamingConventions.ValidVariableName.NotCamelCaps too -->
  <rule ref="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps" />
</ruleset>
